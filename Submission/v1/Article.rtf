{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f36\froman\fcharset238\fprq2 Times New Roman CE;}{\f37\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f39\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f40\froman\fcharset162\fprq2 Times New Roman Tur;}{\f41\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f42\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f43\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f44\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f46\fswiss\fcharset238\fprq2 Arial CE;}{\f47\fswiss\fcharset204\fprq2 Arial Cyr;}{\f49\fswiss\fcharset161\fprq2 Arial Greek;}{\f50\fswiss\fcharset162\fprq2 Arial Tur;}
{\f51\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f52\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f53\fswiss\fcharset186\fprq2 Arial Baltic;}{\f54\fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f56\fmodern\fcharset238\fprq1 Courier New CE;}
{\f57\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f59\fmodern\fcharset161\fprq1 Courier New Greek;}{\f60\fmodern\fcharset162\fprq1 Courier New Tur;}{\f61\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f62\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f63\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f64\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{
\s1\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \f2\fs20\ul\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 1;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\*\cs15 \additive \ul\cf2 \sbasedon10 Hyperlink;}{\s16\ql \li0\ri0\widctlpar
\tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext16 header;}{\s17\ql \li0\ri0\widctlpar
\tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext17 footer;}{\*\cs18 \additive \sbasedon10 page number;}{
\s19\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext19 Body Text;}{\*\cs20 \additive \ul\cf12 \sbasedon10 FollowedHyperlink;}{
\s21\ql \li0\ri0\sb100\sa100\sbauto1\saauto1\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f1\fs22\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext21 \styrsid13389238 Normal (Web);}}
{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\rsidtbl \rsid615511\rsid786478\rsid866017\rsid868484\rsid1250226\rsid1390445\rsid1587851\rsid1722254\rsid1977274\rsid1994311\rsid2055107\rsid2250779\rsid2557743\rsid2649218\rsid2838959\rsid3024209
\rsid3039192\rsid3111084\rsid3301754\rsid3358210\rsid3766103\rsid4004255\rsid4066811\rsid4278954\rsid4347832\rsid4482147\rsid4593415\rsid4678260\rsid5139196\rsid5247024\rsid5256928\rsid5451753\rsid5834692\rsid6163764\rsid6164277\rsid6296553\rsid6303402
\rsid6309814\rsid6368095\rsid6519399\rsid6635970\rsid6954913\rsid7359959\rsid7472134\rsid7957968\rsid8260124\rsid8856976\rsid8874108\rsid9504741\rsid9592312\rsid9640643\rsid9661679\rsid10028926\rsid10892162\rsid11348856\rsid11349467\rsid11484659
\rsid11754531\rsid11820316\rsid11884556\rsid12206614\rsid12211590\rsid12266800\rsid12454739\rsid12457802\rsid12612582\rsid12737610\rsid13198344\rsid13389238\rsid13774545\rsid13979109\rsid14233159\rsid14498916\rsid14751456\rsid14839588\rsid14878388
\rsid14891228\rsid15278282\rsid15295095\rsid15353802\rsid15404762\rsid15422294\rsid15805149\rsid16015393\rsid16189757\rsid16190017\rsid16331705\rsid16394421\rsid16585130\rsid16673065}{\*\generator Microsoft Word 11.0.6113;}{\info
{\title "Porting Lucene to }{\author Home}{\operator Larry Reeve}{\creatim\yr2003\mo7\dy22\hr21\min8}{\revtim\yr2005\mo7\dy11\hr10\min37}{\printim\yr2005\mo7\dy11\hr10\min20}{\version254}{\edmins1314}{\nofpages8}{\nofwords2524}{\nofchars13631}
{\*\company Microsoft Corporation}{\nofcharsws16127}{\vern24699}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind1\viewscale100\nolnhtadjtbl\rsidroot7472134 \fet0{\*\ftnsep \pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3766103 \chftnsep 
\par }}{\*\ftnsepc \pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3766103 \chftnsepc 
\par }}{\*\aftnsep \pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3766103 \chftnsep 
\par }}{\*\aftnsepc \pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3766103 \chftnsepc 
\par }}\sectd \linex0\sectdefaultcl\sftnbj {\header \pard\plain \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid4347832 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f2\fs20\cgrid0\insrsid4347832\charrsid6163764 "}
{\f2\fs20\insrsid4347832\charrsid6163764 Improving Digital Library Search Precision Using Google Desktop}{\f2\fs20\cgrid0\insrsid4347832\charrsid6163764 "}{\f2\fs20\insrsid4347832\charrsid6163764 
\par }\pard\plain \s16\qc \li0\ri0\widctlpar\tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f2\fs20\cgrid0\insrsid3766103 by Lawrence Reeve
\par }}{\footer \pard\plain \s17\qc \li0\ri0\widctlpar\tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f2\fs20\insrsid3766103 Page }{\field{\*\fldinst {
\cs18\f2\fs20\insrsid3766103  PAGE }}{\fldrslt {\cs18\f2\fs20\lang1024\langfe1024\noproof\insrsid868484 7}}}{\f2\fs20\insrsid3766103 
\par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}
{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \s19\ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 
\f2\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid3766103 
\par }\pard \s19\ql \fi720\li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid4593415 {\insrsid8856976 Google Desktop Search (GDS) is a local}{\insrsid1250226 ly executed}{\insrsid8856976 
 service that allows users to index and search the contents of their machines (}{\insrsid8856976\charrsid8856976 http://desktop.google.com/}{\insrsid8856976 ). }{\insrsid1250226 Google also offers }{\insrsid1977274 the}{\insrsid1250226 
 Google Desktop Search Software Development Kit (SDK)}{\insrsid1977274  for}{\insrsid8856976  extending GDS }{\insrsid1977274 with custom}{\insrsid8856976  plug-ins to index content not }{\insrsid13774545 natively}{\insrsid8856976  supported by GDS}{
\insrsid1977274  (}{\insrsid1977274\charrsid1250226 http://desktop.google.com/developer.html}{\insrsid1977274 )}{\insrsid8856976 . }{\insrsid1250226 
This extensibility offers the possibility of supporting not only new file types, but also extending the search facil}{\insrsid13774545 ities of existing applications. For example, }{\insrsid2838959 the document sear}{\insrsid1977274 ching }{
\insrsid12454739 function of}{\insrsid1977274  digital libraries such as}{\insrsid2838959  }{\insrsid1977274 CiteSeer can be extended to}{\insrsid2838959  allow }{\insrsid13774545 author name searches }{\insrsid4678260 wit}{\insrsid6635970 h}{
\insrsid4678260  the goal of }{\insrsid13774545 improv}{\insrsid2838959 ing}{\insrsid13774545  }{\insrsid4678260 search precision}{\insrsid13774545 . }{\insrsid4678260 Higher precision searches are usually associated w
ith the return of highly relevant documents. }{\insrsid12454739 Local searching of these digital library resources }{\insrsid4482147 has other potential advantages}{\insrsid4678260  beyond }{\insrsid12266800 increased }{\insrsid4678260 search precision}{
\insrsid12266800 , such as}{\insrsid4482147  }{\insrsid12266800 improved}{\insrsid4678260  search time}{\insrsid12266800 s}{\insrsid4482147  and }{\insrsid4678260 reduced strain on server resources}{\insrsid4482147 . }{\insrsid5256928 gdsCiteSeer, a }{
\insrsid11884556 GDS plug-in for }{\insrsid12266800 locally }{\insrsid11884556 indexing CiteSeer metadata}{\insrsid5256928 , }{\insrsid12266800 was implemented to determine how well search precision could be improved using Google Desktop Search and }{
\insrsid5256928 is }{\insrsid11884556 described in detail below.}{\insrsid6303402  gdsCiteSeer is implemented using C# on the .Net platform.}{\insrsid1250226 
\par }{\insrsid8856976 CiteSeer is a publicly available digital library of scientific papers focused mostly in the computer and information science areas}{\insrsid6635970  (}{\insrsid6635970\charrsid15278282 http://citeseer.ist.psu.edu/}{\insrsid6635970 )}{
\insrsid8856976 . }{\insrsid6635970 CiteSeer is currently h}{\insrsid6635970\charrsid8856976 osted by Penn State's School of Information Sciences and Technology}{\insrsid6635970 . The accumulated metadata }{\insrsid15404762 they have acquir
ed through web crawling }{\insrsid6635970 is made publicly available. }{\insrsid5256928 The }{\insrsid6635970 GDS }{\insrsid5256928 plug-in }{\insrsid6635970 index}{\insrsid15404762 es}{\insrsid6635970 
 this metadata to allow for searching by fields rather than }{\insrsid15404762 by keyword in }{\insrsid6635970 a general full text search.}{\insrsid15404762  }{\insrsid1250226 The existing }{\insrsid2838959 document }{\insrsid1250226 search facility }{
\insrsid15805149 of CiteSeer }{\insrsid1250226 does not have an advanced form for finding documents }{\insrsid6635970 using}{\insrsid1250226  }{\insrsid12454739 specific fields, such as }{\insrsid1250226 author name}{\insrsid15805149 
, author affiliation, document title, publication or other }{\insrsid6635970 related }{\insrsid15805149 fields.}{\insrsid1250226  }{\insrsid6635970 
This prevents a user from quickly finding documents when the values of these fields are known. For example, a}{\insrsid3766103  search for documents by a particular author will likely return many non-relevant results, such as documents }{\insrsid615511 
where}{\insrsid3766103  an author has been cited}{\insrsid15805149  within a returned document but is not }{\insrsid6635970 one of }{\insrsid15805149 the author}{\insrsid6635970 s}{\insrsid15805149  of the document}{\insrsid3766103 . 
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid8856976 {\insrsid16331705 \page }{\ul\insrsid15278282\charrsid9504741 CiteSeer Metadata
\par }\pard \s19\ql \fi720\li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid4593415 {\insrsid3766103 CiteSeer provides metadata, such as author name and publication d}{\insrsid15404762 ate, for the documents it indexes}{
\insrsid3766103 .}{\insrsid14878388  }{\insrsid5451753 The metadata can be obtained in }{\insrsid15404762 two ways: via a web service protocol or by a file download. }{\insrsid5451753 
CiteSeer is compliant with the Open Archives Initiative Protocol for Metadata Harvesting }{\insrsid16331705 (OAI) }{\insrsid5451753 (}{\insrsid5451753\charrsid5451753 http://www.openarchives.org/OAI/2.0/openarchivesprotocol.htm}{\insrsid5451753 ). Th}{
\insrsid16331705 e OAI}{\insrsid5451753  protocol allows for querying and browsing the available }{\insrsid16331705 CiteSeer }{\insrsid5451753 metada}{\insrsid16331705 ta}{\insrsid15404762  using a web-based protocol}{\insrsid16331705 . }{
\insrsid15404762 
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid8856976 {\insrsid15404762 
\par }\pard \s19\ql \fi720\li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid4593415 {\insrsid16331705 The other way to acquire CiteSeer}{\insrsid5451753  metadata is to download a metadata ar
chive file directly from the CiteSeer web site (}{\field{\*\fldinst {\insrsid12211590  HYPERLINK "}{\insrsid12211590\charrsid5451753 http://citeseer.ist.psu.edu/oai.html}{\insrsid12211590 " }{\insrsid15353802 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000002500000068007400740070003a002f002f00630069007400650073006500650072002e006900730074002e007000730075002e006500640075002f006f00610069002e00680074006d006c000000e0c9ea79f9bace118c8200aa004ba90b4a00000068007400
740070003a002f002f00630069007400650073006500650072002e006900730074002e007000730075002e006500640075002f006f00610069002e00680074006d006c00000000000000}}}{\fldrslt {\cs15\ul\cf2\insrsid12211590\charrsid13979109 http://citeseer.ist.psu.edu/oai.html}}}{
\insrsid5451753 ). }{\insrsid11348856 The }{\insrsid16331705 metadata }{\insrsid11348856 archive file is available in two formats: 1) }{\insrsid12211590 using the Dublin Core fields, and 2) using Dublin Core fie
lds along with additional metadata fields. For }{\insrsid16331705 gdsCiteSeer, }{\insrsid12211590 the second format }{\insrsid15404762 is}{\insrsid12211590  used since it contain}{\insrsid16331705 s}{\insrsid12211590  }{\insrsid16331705 expanded }{
\insrsid12211590 information, such as a}{\insrsid16331705 uthor affiliation, }{\insrsid12211590 useful for indexing. One drawback of the }{\insrsid16331705 metadata }{\insrsid12211590 archive file is }{\insrsid15404762 it is}{\insrsid12211590 
 not always synchronized with the latest documents available on the web site.}{\insrsid16331705  Curre}{\insrsid12206614 ntly there are 574}{\insrsid16331705 ,}{\insrsid12206614 9}{\insrsid16331705 
00 documents described in the metadata archive file, while the}{\insrsid12206614  CiteSeer web site reports }{\insrsid16331705 72}{\insrsid12206614 3}{\insrsid16331705 ,}{\insrsid12206614 152}{\insrsid16331705  documents available. The meta}{
\insrsid12206614 data archive file contains }{\insrsid16331705 5}{\insrsid12206614 749}{\insrsid16331705  }{\insrsid3039192 document description }{\insrsid16331705 files in }{\insrsid12211590 XML format}{\insrsid16331705 . Each }{\insrsid3039192 
document description }{\insrsid16331705 file describes 100 documents.}{\insrsid5247024  Figure }{\insrsid12266800 1}{\insrsid5247024  shows a XML }{\insrsid3039192 metadata }{\insrsid5247024 fragment }{\insrsid866017 about }{\insrsid5247024 one document.}
{\insrsid15278282 
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid8856976 {\insrsid6303402 
\par }\pard \s19\ql \fi720\li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid4593415 {\insrsid6303402 The gdsCiteSeer class CSFileReader is responsible for parsing the XML fragments and extracting field values. }{\insrsid4278954 
The .Net XmlDocument class is used to load each document description file. A .Net StreamReader instance is used to load each file into memory as a single string. }{\insrsid6303402 Since each document description file contains a list of }{\insrsid4278954 
<record> entries, XmlDocument will fail since there is no parent entry. To get around this, the XmlDocument }{\insrsid2055107 instance }{\insrsid4278954 is}{\insrsid12266800  passed a string of XML to load consisting of a }{
\i\insrsid4278954\charrsid12266800 <records>}{\insrsid12266800  prefix, the }{\insrsid4278954 document contents }{\insrsid2055107 from Stream}{\insrsid6368095 Reader.ReadToEnd}{\insrsid12266800 , and a }{\i\insrsid4278954\charrsid12266800 </records>}{
\insrsid12266800  suffix}{\insrsid4278954 .}{\insrsid6368095  The code to acco}{\insrsid12266800 mplish this is shown in Figure 2}{\insrsid6368095 .}{\insrsid2250779  After the document has been loaded and before it can be parsed, the }{\insrsid12266800 
XML }{\insrsid2250779 namespaces \lquote oai_citeseer\rquote  and \lquote dc\rquote  have to be declared using the .Net XmlNamespaceMan}{\insrsid12266800 ager class, as shown in Figure 3}{\insrsid2250779 .}{\insrsid5834692  A}{\insrsid12266800 f}{
\insrsid3111084 t}{\insrsid12266800 er the loading and setup steps are completed,}{\insrsid3111084  it is}{\insrsid5834692  straightforward to loop through all 100 document descriptions extracting out }{\insrsid3111084 the }{\insrsid12266800 single }{
\insrsid5834692 field values}{\insrsid3111084  useful for indexing}{\insrsid5834692 . The author name field is }{\insrsid12266800 unique}{\insrsid5834692  because it }{\insrsid12266800 is multi-valued.}{\insrsid5834692  }{\insrsid3111084 
Extracting a list of authors}{\insrsid5834692  is done by }{\insrsid3111084 first }{\insrsid5834692 getting a list of author nodes using the .Net XmlNodeList class and }{\insrsid3111084 then }{\insrsid5834692 traversing each node in}{\insrsid12266800  t}{
\insrsid5834692 he list, extracting author }{\insrsid12266800 full }{\insrsid5834692 name and affiliation.}{\insrsid6303402 
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid8856976 {\insrsid6303402 
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid9504741 {\ul\insrsid9504741\charrsid9504741 GDS Schema
\par }\pard \s19\ql \fi720\li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid4593415 {\insrsid14878388 
GDS provides a set of non-extensible schemas, called Event Schemas, for indexing files. The schema sets are organized hierarchically with child schemas inheriting from pare
nt schemas. The base schema is an abstract schema called Google.Desktop.Indexable. It}{\insrsid14751456 s}{\insrsid14878388  purpose is to store}{\insrsid14498916  }{\insrsid14751456 data}{\insrsid14498916  common to all indexing types: document }{
\insrsid16015393 textual }{\insrsid14498916 content, }{\insrsid16015393 document length}{\insrsid14498916 , }{\insrsid16015393 and document format. Using this base schema, more specific schemas are 
defined by Google based on the document type: email, instant messaging, and files, }{\insrsid16673065 which are decomposed}{\insrsid16015393 
 into four types: general file, web page, text file, and media file. The complete schema hierarchy is shown in Figure }{\insrsid12266800 4}{\insrsid16015393 .}{\insrsid3301754  For indexing CiteSeer metadata, 
the Google.Desktop.WebPage schema is used. The properties }{\insrsid16189757 for }{\insrsid14751456 the WebPage }{\insrsid12266800 schema are shown in Table 1}{\insrsid16189757 .}{\insrsid15278282 
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid8856976 {\insrsid5247024 \line }{\ul\insrsid3301754 Indexing}{\ul\insrsid14878388\charrsid14878388 
\par }\pard \s19\ql \fi720\li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid4593415 {\insrsid14751456 The primary goal for gdsCiteSeer is to index enough data to allow document searches by author name and publication date. A}{
\insrsid6303402  subset of the }{\insrsid14751456 XML document description }{\insrsid6303402 fields is}{\insrsid14751456  used for indexing: dc:identifier, dc:date, dc:title, and oai_citeseer:author.}{\insrsid6303402  }{\insrsid3358210 
The dc:date is used for publication date and publication year. The oai_citeseer:author field s}{\insrsid12266800 tores author full names, but for indexing the full name is split into three fields: }{\insrsid3358210 first name, last name, and full name. }{
\insrsid14751456 Other CiteSeer fields are also useful for indexing, but they are not implemented at this time. For example, a}{\insrsid6303402 uthor affiliation allows searches for all authors at a particular institution, o
r for retrieving a particular author\rquote 
s work while they were affiliated with a specified institution. In order to use author affiliation, however, the field values must be normalized as institution names are not consistently used throughout all of the collected metadata. }{\insrsid12266800 
In general, f}{\insrsid6303402 ields may need some pre-processing to make them useful for indexing.}{\insrsid14751456  
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid6303402 {\insrsid14751456 
\par }\pard \s19\ql \fi720\li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid4593415 {\insrsid14751456 The extracted metadata fields are mapped to GDS schema property names, as shown in Table 2. The GDS }{
\i\insrsid14751456\charrsid4593415 uri}{\insrsid14751456  property is set to the URL of the document on CiteSeer. This is done so that in the returned }{\insrsid14891228 result }{\insrsid14751456 GDS will show a link to }{\insrsid14891228 the }{
\insrsid14751456 CiteSeer }{\insrsid14891228 web page describing the document. None of the documents are stored locally, so a query result needs to allow a user to click on the }{\insrsid4593415 hyperlink }{\insrsid14891228 result and be redirected to }{
\insrsid4593415 the document page on the }{\insrsid14891228 CiteSeer}{\insrsid4593415  server}{\insrsid14891228 . The GDS }{\i\insrsid14891228\charrsid4593415 last_modified_time}{\insrsid14891228 
 property is set to the date of publication. GDS uses this information in sorting results for display. The GDS }{\i\insrsid14891228\charrsid4593415 title}{\insrsid14891228  property is set to the title of the document. The GDS }{
\i\insrsid14891228\charrsid4593415 content}{\insrsid14891228  property is set to an internally constructed text field. This property normally contains a document\rquote s full text which is indexed by GDS. In gdsCiteSeer,
 the document full text is not known but the metadata is known. The goal is not to search by full text, but to search using CiteSeer metadata. gdsCiteSeer construct}{\insrsid4593415 s}{\insrsid14891228  its own document contents field }{\insrsid10892162 
containing }{\insrsid8260124 encoded }{\insrsid10892162 metadata information for author name and publication date.}{\insrsid14751456 
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid6303402 {\insrsid14891228 
\par }\pard \s19\ql \fi720\li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid4593415 {\insrsid14891228 The GDS schema currently cannot be extended}{\insrsid3358210  except by Google}{\insrsid14891228 .}{\insrsid3358210 
 This restricts its usefulness as a general purpose search facility. }{\insrsid6954913 Other search libraries, such as Apache Lucene (}{\insrsid6954913\charrsid6954913 http://lucene.apache.org/ }{\insrsid6954913 ), allow for cre
ating and indexing custom fields. }{\insrsid3358210 Extending the GDS schema would allow adding new properties to hold data such as publication month and publication year. To get around this limitation, a method inspired by the Swoogle system (}{
\insrsid4593415\charrsid4593415 http://swoogle.umbc.edu/}{\insrsid3358210 )}{\insrsid4593415  is used}{\insrsid3358210 . Swoogle uses a technique called swangling to }{\insrsid8260124 hash}{\insrsid3358210 
 RDF triples into terms that can be indexed by a traditional information retrieval system. For gdsCiteSeer, a }{\insrsid10892162 SHA1 }{\insrsid3358210 hash is generated for author first name, last name, and full name, as well as public
ation date and year. }{\insrsid10892162 The }{\insrsid4593415 generated }{\insrsid10892162 hash }{\insrsid4593415 values are}{\insrsid10892162  converted to hexadecimal string}{\insrsid4593415 s}{\insrsid10892162 . After each field has been hashed, they }
{\insrsid12206614 are }{\insrsid10892162 joined together}{\insrsid4593415 , space separated,}{\insrsid10892162  and stored in the GDS }{\i\insrsid10892162\charrsid4593415 content}{\insrsid10892162  property. GDS then index}{\insrsid8260124 es}{
\insrsid10892162  the hash values}{\insrsid4593415  }{\insrsid8260124  as if they were standard terms}{\insrsid10892162 .}{\insrsid14891228 
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid6303402 {\insrsid10892162 
\par }\pard \s19\ql \fi720\li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid4593415 {\insrsid10892162 The FieldBuilder class, shown in Figure 5, is responsible for }{\insrsid1722254 constructing }{\insrsid9640643 
fields for indexing and }{\insrsid8260124 generating }{\insrsid1722254 the hashes for each field. }{\insrsid9640643 The BuildField method normalizes field values and adds a prefix indicating the field name. }{\insrsid1722254 
Author names are first normalized by removing leading and trailing spaces and lower-casing the value. }{\insrsid3024209 The publication month and year are left padded with zeros}{\insrsid4593415  for consistency}{\insrsid3024209 . Each field is }{
\insrsid2557743 prefixed with its field name: \lquote first:\rquote  for author first name, \lquote last:\rquote  for author last name, \lquote full:\rquote  for author full name, }{\insrsid3024209 \lquote pubyear:\rquote }{\insrsid2557743 
 for publication year, and \lquote pubmonth:\rquote  for publication month.}{\insrsid3024209  }{\insrsid9640643 The EncodeField method }{\insrsid3024209 compute}{\insrsid9640643 s a hash}{\insrsid3024209  over the prefix and field value}{\insrsid4593415 
 combination}{\insrsid9640643 , and returns the }{\insrsid4593415 hash }{\insrsid9640643 value}{\insrsid3024209  as a hexadecimal string.}{\insrsid2557743 
 The current implementation uses the SHA1 hash, but other hash computations can be used, such as MD5.}{\insrsid10892162 
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid6303402 {\insrsid6309814 
\par }\pard \s19\ql \fi720\li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid4593415 {\insrsid6309814 GDS plug-ins
 can index documents in two ways. The first is to wait for requests to come in through the GDS Crawler service, and the second is to explicitly tell the GDS Indexer to index a document. gdsCiteSeer uses the second approach. }{\insrsid11820316 
The GDS API is Windows COM-based and the GDS SDK comes with several examples}{\insrsid4593415  demonstrating its usage}{\insrsid11820316 . Since gdsCiteSeer is C# based, the .Net COM Interop facility must be used. The C# project }{\insrsid4593415 needs to
}{\insrsid11820316  set a }{\insrsid4593415 COM }{\insrsid11820316 reference to }{\insrsid11820316\charrsid11820316 GoogleDesktopSearchAPILib}{\insrsid11820316 . 
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid6303402 {\insrsid11820316 
\par }\pard \s19\ql \fi720\li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid4593415 {\insrsid11820316 The C# class CiteSeerIndexer is used to handle GDS indexing. }{\insrsid6309814 
Before plug-ins can index a document, they must first be register}{\insrsid11820316 ed. This is done by creating an instance of GoogleDesktopSearchRegisterClass and }{\insrsid2649218 calling RegisterComponent, }{\insrsid11820316 passing it a title and }{
\insrsid2649218 a }{\insrsid11820316 GUID}{\insrsid2649218  unique to the plug-in}{\insrsid11820316 . }{\insrsid2649218 This will cause a message box 
to appear requesting authorization from the user to install the plug-in. Since gdsCiteSeer indexes files and then quits, the registration is torn done after indexing by calling UnregisterComponent and passing it the plug-in GUID. Indexing occurs by first 
creating an instance of GoogleDesktopSearchClass and then calling CreateEvent with the name of schema to create. In this case, the schema name is Google.Desktop.WebPage. Once }{\insrsid4593415 an}{\insrsid2649218  IGoogleDesktopSearchEvent is created}{
\insrsid4593415  using CreateEvent}{\insrsid2649218 , the propert}{\insrsid4593415 y values}{\insrsid2649218  shown in }{\insrsid4066811 Table 1 }{\insrsid2649218 are }{\insrsid4593415 set}{\insrsid4066811 . Finally, the Send method is called}{
\insrsid4593415  to request GDS indexing}{\insrsid4066811 . 
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid6303402 {\insrsid4066811 
\par }\pard \s19\ql \fi720\li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid4593415 {\insrsid4066811 A few issues were fo}{\insrsid4593415 und when requesting indexing for all}{\insrsid4066811 
 574,900 documents. The GDS Indexing service seems to queue up the indexing requests. The index requests are generally very fast up to some point. GDS Indexi
ng occasionally stops accepting new requests for some period. These are usually indicated by two exceptions: System.IO.EndOfStreamException and System.Runtime.InteropServices.COMException with the error code set to S_INDEXING_PAUSED. In both cases, the re
sult is to wait and try the index request again. System.IO.EndOfStreamException generally required shorter waits than System.Runtime.InteropServices.COMException. GDS Indexing also seems to }{\insrsid8260124 continuously }{\insrsid4066811 
 adjust its indexing priority, perhaps based on system usage. In some cases the indexing happened very rapidly and in other cases indexing individual documents seems to take a long time. Indexing the approximately 575,000 documents took o}{
\insrsid8260124 ver 12 hours on a }{\insrsid4066811 P}{\insrsid8260124 entium }{\insrsid4066811 4}{\insrsid8260124 HT}{\insrsid4066811 -3.2Ghz with 1GB of memory. }{\insrsid6309814 
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid8856976 {\insrsid6303402 
\par }{\ul\insrsid3301754\charrsid3301754 Querying
\par }\pard \s19\ql \fi720\li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid4593415 {\insrsid15422294 To query the hashed field values, a }{\insrsid1587851 plain-text }{\insrsid15422294 
query itself must first be hashed. This is done using a }{\insrsid6954913 Windows-forms based }{\insrsid15422294 custom query builder that converts }{\insrsid1587851 plain-text }{\insrsid15422294 
field values into hash values, and then calls the Google Desktop web interface with the query. Figure 6 shows the query builder interface with an example query. The user enters values into the available search fields }{\insrsid1587851 using plain text }{
\insrsid15422294 and then clicks on the Generate Query button. }{\insrsid1587851 The plain-}{\insrsid15422294 text }{\insrsid1587851 in each of the fields is then composed into a plain-text conjunctive }{\insrsid15422294 query and }{\insrsid1587851 then }
{\insrsid15422294 an encoded (hashed) }{\insrsid1587851 form of the }{\insrsid15422294 query }{\insrsid1587851 is}{\insrsid15422294 
 generated. When the user clicks on the Send Query to Google Desktop button, the encoded query is sent to the local Google Desktop web server. The URL to submit the search is stored in the registry value HKEY_CURRENT_USER\\Software\\Google\\Google Desktop
\\API\\search_url. The encoded query is appended to this URL value, and called using the Start method of the .Net Process class.}{\insrsid6954913  }{\insrsid3301754 
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid8856976 {\insrsid6954913 
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid15278282 {\ul\insrsid15278282\charrsid9504741 Evaluation
\par }\pard \s19\ql \fi720\li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid4593415 {\insrsid1587851 
To determine how effective the hashing of field values to simulate schema properties is, the precision of several searches is used. In information retrieval, the common measures of performance are precision and recall used together. Recall is def
ined as (Retrieved & Relevant documents) / (All Relevant documents) and Precision is defined as (Retrieved & Relevant documents) / (All Retrieved documents). }{\insrsid16585130 
Recall and Precision are evaluated on a scale of 0 to 1, and each generally shares an inverse relationship with the other. }{\insrsid1587851 
Recall is generally hard to determine with a large document set, since all relevant documents must be identified. In this case, gdsCiteSeer is designed to improve precision}{\insrsid16585130 , so only precision is measured.}{\insrsid1587851 
 The precision-at-}{\i\insrsid1587851\charrsid1994311 n}{\insrsid1587851 -documents method is used}{\insrsid16585130 , which}{\insrsid1587851  measures the precision at }{\insrsid1994311 each }{\insrsid1587851 set of documents returned, }{\insrsid1994311 
where }{\i\insrsid16585130\charrsid16585130 n}{\insrsid16585130  defines the size of a }{\insrsid1994311 set of documents. The comparison looks at the }{\insrsid13389238 average }{\insrsid1994311 precision of a }{\insrsid13389238 set of }{\insrsid1994311 
quer}{\insrsid13389238 ies}{\insrsid1994311  run against CiteSeer document search and the }{\insrsid13389238 average }{\insrsid1994311 precision of }{\insrsid16585130 the same set of }{\insrsid1994311 quer}{\insrsid16585130 ies}{\insrsid1994311  }{
\insrsid13389238 using GDS.}{\insrsid1587851 
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid15278282 {\insrsid13389238 
\par }\pard \s19\ql \fi720\li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid4593415 {\insrsid13389238 Three queries are used: 1) all papers by author Peter Lee, }{\insrsid4593415 an author }{\insrsid16585130 who
 appears frequently in CiteSeer; }{\insrsid13389238 2) all papers by author Jeffrey Ullman, }{\insrsid4593415 whose name }{\insrsid16585130 is not common; }{\insrsid13389238 and }{\insrsid16585130 3) }{\insrsid13389238 all papers by author John Smith}{
\insrsid4593415 , whose first and last name are both}{\insrsid16585130  common name}{\insrsid4593415 s}{\insrsid13389238 .}{\insrsid16585130   To increase precision using CiteSeer, the }{\i\insrsid16585130\charrsid16585130 w}{\insrsid16585130 
 operator is used to specify that terms must co-occur. For example, \lquote peter w/2 lee\rquote  is used for the first query. In gdsCiteSeer, the field values are specified in the appropriate text bo
x and the query is generated using the full name field. For example, \lquote full:peter lee\rquote .}{\insrsid13389238 
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid15278282 {\insrsid13389238 
\par }\pard \s19\ql \fi720\li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid4593415 {\insrsid12737610 Table }{\insrsid4593415 3}{\insrsid12737610  shows the results of measuring average precision at each page of query results. }{
\insrsid4004255 CiteSeer returns prec}{\insrsid4593415 ision around the mid to high 0.60}{\insrsid4004255  range. Using gdsCiteSeer, the precision is }{\insrsid4593415 1.00}{\insrsid4004255 
. In general achieving such high precision values is cause for suspicion. However, gdsCiteSeer is using fielded search, similar to a database query, where the precision is expected to be very high. This is in contrast to CiteSeer, whic
h is using a full-text search and trying to find papers by a particular author. }{\insrsid12737610 
\par }\pard \s19\ql \li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid15278282 {\insrsid1587851 
\par }{\ul\insrsid1390445 Summary}{\ul\insrsid15278282 
\par }\pard \s19\ql \fi720\li0\ri0\sl360\slmult1\widctlpar\faauto\adjustright\rin0\lin0\itap0\pararsid4593415 {\insrsid16190017\charrsid16190017 
gdsCiteSeer shows that by acquiring metadata from external sources and indexing it locally, higher precision searching can result.}{\insrsid16190017  The main impediment to achieving th
is using GDS is the lack of an extensible schema. However, alternative methods, such as value hashing, can be used to generate indexable terms}{\insrsid7957968  not only for GDS but other desktop search engines that do not have a fielded query capability}
{\insrsid16190017 .}{\insrsid7957968  There are a few drawbacks to using the hashing approach. Data must be normalized. For example, names need to be decomposed into first and last}{\insrsid11349467  fields}{\insrsid7957968 . This was done using }{
\insrsid11349467 a split function based on }{\insrsid12612582 whitespace}{\insrsid11349467 . This is not always accurate. Also, only}{\insrsid7957968  }{\insrsid11349467 exact matches are allowed, so a }{\insrsid12612582 full-name }{\insrsid11349467 
query for \lquote Bob Smith\rquote  will miss names indexed as \lquote Bob I. Smith\rquote . }{\insrsid12457802 Even with these limitations}{\insrsid11349467 , }{\insrsid12457802 gdsCiteSeer shows }{\insrsid11349467 methods such }{\insrsid12457802 as 
value hashing can improve search precision}{\insrsid11349467  until extensible schemas are added to Google Desktop Search.}{\cgrid0\insrsid3766103 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f2\fs20\cgrid0\insrsid3766103 
\par }}